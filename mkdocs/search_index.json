{
    "docs": [
        {
            "location": "/", 
            "text": "JEO WordPress Theme\n\n\nA WordPress parent theme for interactive maps and journalism\n\n\n\n\n\n\n\nJEO WordPress Theme acts as a geojournalism platform which allows news organizations, bloggers and NGOs to publish news stories as layers of information on digital maps. With JEO, creating the interaction between data layers and contextual information is much more intuitive and interactive. The theme is ready for multilingual content and facilitates the publishing tasks.\n\n\nYou can post geotagged stories and create richly designed pages for each one of the featured stories. At same time, by simply imputing the ids of layers hosted on MapBox, you can manage sophisticated maps without loosing perfomance, add legends directly with HTML and set the map paramethers. All direct at the WordPress dashboard.\n\n\nJEO wants to help journalists and NGOs to improve storytelling with maps. Creating a child theme with all its functionality is easy since it contains all the necessary hooks to customize layouts and data visualization.\n\n\n\n\nDownload\n\n\nv1.0.5\n\n\nzip\n\n\ntar.gz\n\n\nSee all releases\n\n\n\n\nFeatures\n\n\n\n\nLeaflet map library\n\n\nCustom tile layers\n\n\nMapBox\n maps\n\n\nCartoDB\n maps\n\n\nLayer filtering options, allowing you to mix tile layer, MapBox and CartoDB.\n\n\nGeocoding WordPress posts using OpenStreetMaps or Google Maps supporting custom post types.\n\n\nGoogle Street View support for Google Maps geocoding.\n\n\nCustomizable marker icons that can be associated to categories, custom taxonomies or posts directly.\n\n\nMap markers query integrated to posts query.\n\n\nGeoJSON API (any content /?geojson gives the geojson output). E.g.: yourwebsite.com/category/one/?geojson\n\n\nSupport \nqTranslate\n multilanguage plugin\n\n\n\n\n\n\nGetting started\n\n\nDownload the file and upload to your wp-content/themes/ directory, on your self-hosted WordPress installation.\n\n\nOr you can use git:\n\n\n$ cd wp-content/themes\n$ git clone git://github.com/oeco/jeo.git\n\n\n\n\nAfter setting the files, go to Appearance \n Themes and activate JEO.\n\n\nFirst map\n\n\nAfter activating your theme, you'll see a big message on your homepage to create your first map. Do it! You can start by selecting one of our presetted open layers, or already add custom layers if you have any.\n\n\nSettings and contents\n\n\nAfter setting your first map, go to the bottom of your dashboard's menu and click on JEO Settings to change website styles, map behaviours and basic settings to set it up the way you need it.\n\n\nNow you can go manage your posts, geolocate them and add custom marker icons!\n\n\n\n\nAuthors and Contributors\n\n\nJEO is a collaboration between @oeco, @cardume, @memelab and @icfjknight. Developed after the theme was built for InfoAmazonia, a project led by ICFJ Knight International Journalism Fellow Gustavo Faleiros and supported by Internews.\n\n\n\n\nSupport or Contact\n\n\nHaving trouble with JEO? Go to our \nissues page\n and we'll help you there!", 
            "title": "Home"
        }, 
        {
            "location": "/#download", 
            "text": "v1.0.5  zip  tar.gz  See all releases", 
            "title": "Download"
        }, 
        {
            "location": "/#features", 
            "text": "Leaflet map library  Custom tile layers  MapBox  maps  CartoDB  maps  Layer filtering options, allowing you to mix tile layer, MapBox and CartoDB.  Geocoding WordPress posts using OpenStreetMaps or Google Maps supporting custom post types.  Google Street View support for Google Maps geocoding.  Customizable marker icons that can be associated to categories, custom taxonomies or posts directly.  Map markers query integrated to posts query.  GeoJSON API (any content /?geojson gives the geojson output). E.g.: yourwebsite.com/category/one/?geojson  Support  qTranslate  multilanguage plugin", 
            "title": "Features"
        }, 
        {
            "location": "/#getting-started", 
            "text": "Download the file and upload to your wp-content/themes/ directory, on your self-hosted WordPress installation.  Or you can use git:  $ cd wp-content/themes\n$ git clone git://github.com/oeco/jeo.git  After setting the files, go to Appearance   Themes and activate JEO.  First map  After activating your theme, you'll see a big message on your homepage to create your first map. Do it! You can start by selecting one of our presetted open layers, or already add custom layers if you have any.  Settings and contents  After setting your first map, go to the bottom of your dashboard's menu and click on JEO Settings to change website styles, map behaviours and basic settings to set it up the way you need it.  Now you can go manage your posts, geolocate them and add custom marker icons!", 
            "title": "Getting started"
        }, 
        {
            "location": "/#authors-and-contributors", 
            "text": "JEO is a collaboration between @oeco, @cardume, @memelab and @icfjknight. Developed after the theme was built for InfoAmazonia, a project led by ICFJ Knight International Journalism Fellow Gustavo Faleiros and supported by Internews.", 
            "title": "Authors and Contributors"
        }, 
        {
            "location": "/#support-or-contact", 
            "text": "Having trouble with JEO? Go to our  issues page  and we'll help you there!", 
            "title": "Support or Contact"
        }, 
        {
            "location": "/user-tutorials/creating-a-map/", 
            "text": "How to create a map on your JEO installation", 
            "title": "Creating a map"
        }, 
        {
            "location": "/user-tutorials/managing-map-group/", 
            "text": "Creating your first map group\n\n\nAfter creating 2 or more maps you might want to create a mapgroup, to join your map visualization into interactive tabs. For that, you can create map groups.\n\n\nOn your dashboard, access the menu \nMaps -\n Add new map group\n:\n\n\n\n\nNow you can set a title and add maps to your map group. I'll name mine \"Home maps\", since I'll be using this map group as my home featured map.\n\n\n\n\nAdding and managing maps is pretty easey. Select on the list of available maps (the ones you've created on your JEO installation) which ones you'd like to render in your map group. After adding some, you can drag them around to change the order and mark to add the map to the \"more\" tab.\n\n\nThe \"more\" tab\n\n\nThis feature automatically appends the selected maps to a dropdown list on the map navigation interface. Is used mostly when you have a lot of maps to display on the map group and it breaks the tabs layout.\n\n\nUsing a map group as the featured map\n\n\nAfter creating your map group, you might want to use it as your featured map. Head to JEO settings, on the dashboard menu.\n\n\n\n\nAt the first tab, \nFront page\n, you'll have the settings of featured map. Select your map group, save and your map group is good to go!", 
            "title": "Managing map groups"
        }, 
        {
            "location": "/user-tutorials/managing-map-group/#creating-your-first-map-group", 
            "text": "After creating 2 or more maps you might want to create a mapgroup, to join your map visualization into interactive tabs. For that, you can create map groups.  On your dashboard, access the menu  Maps -  Add new map group :   Now you can set a title and add maps to your map group. I'll name mine \"Home maps\", since I'll be using this map group as my home featured map.   Adding and managing maps is pretty easey. Select on the list of available maps (the ones you've created on your JEO installation) which ones you'd like to render in your map group. After adding some, you can drag them around to change the order and mark to add the map to the \"more\" tab.", 
            "title": "Creating your first map group"
        }, 
        {
            "location": "/user-tutorials/managing-map-group/#the-more-tab", 
            "text": "This feature automatically appends the selected maps to a dropdown list on the map navigation interface. Is used mostly when you have a lot of maps to display on the map group and it breaks the tabs layout.", 
            "title": "The \"more\" tab"
        }, 
        {
            "location": "/user-tutorials/managing-map-group/#using-a-map-group-as-the-featured-map", 
            "text": "After creating your map group, you might want to use it as your featured map. Head to JEO settings, on the dashboard menu.   At the first tab,  Front page , you'll have the settings of featured map. Select your map group, save and your map group is good to go!", 
            "title": "Using a map group as the featured map"
        }, 
        {
            "location": "/dev-tutorials/child-theme/", 
            "text": "The most recommended way of customizing your JEO project is to create a child theme and consider JEO theme as a framework.\n\n\nThere are plenty of \ntemplate tags\n, \naction hooks\n, \nfilter hooks\n, \njavascript events\n to help you build your own custom mapped narratives website.\n\n\nTo also incourage you to start your child theme we built \nJEO Blank\n, a bootstrap child theme to help you with some tips on customizing JEO native styles, scripts and other functionalities.", 
            "title": "Creating a child theme"
        }, 
        {
            "location": "/template-tags/", 
            "text": "General settings\n\n\njeo_get_options\n\n\nReturns JEO options\n\n\njeo_get_mapbox_access_token\n\n\nReturns MapBox Access Token\n\n\njet_get_mapped_post_types\n\n\nReturns post types that can relate to a map\n\n\nMap\n\n\njeo_set_map\n\n\nSet the global map\n\n\njeo_the_map\n\n\nGet the main map post\n\n\njeo_map_featured\n\n\nGet the featured map post\n\n\njeo_map_latest\n\n\nGet the latest map post\n\n\njeo_is_map\n\n\nCheck if the post is a map\n\n\njeo_map\n\n\nDisplay a map\n\n\njeo_featured\n\n\nDisplay the featured map\n\n\njeo_map_conf\n\n\nGet JSON map config\n\n\njeo_get_map_conf\n\n\nGet array of map config\n\n\njeo_mapgroup_conf\n\n\nGet JSON map group conf\n\n\njeo_get_map_id\n\n\nReturns the main map ID\n\n\njeo_get_the_ID\n\n\nReturns the main map post ID\n\n\njeo_get_map_data\n\n\nReturns map data\n\n\njeo_get_mapgroup_data\n\n\nReturns mapgroup data", 
            "title": "Template tags"
        }, 
        {
            "location": "/template-tags/#general-settings", 
            "text": "jeo_get_options  Returns JEO options  jeo_get_mapbox_access_token  Returns MapBox Access Token  jet_get_mapped_post_types  Returns post types that can relate to a map", 
            "title": "General settings"
        }, 
        {
            "location": "/template-tags/#map", 
            "text": "jeo_set_map  Set the global map  jeo_the_map  Get the main map post  jeo_map_featured  Get the featured map post  jeo_map_latest  Get the latest map post  jeo_is_map  Check if the post is a map  jeo_map  Display a map  jeo_featured  Display the featured map  jeo_map_conf  Get JSON map config  jeo_get_map_conf  Get array of map config  jeo_mapgroup_conf  Get JSON map group conf  jeo_get_map_id  Returns the main map ID  jeo_get_the_ID  Returns the main map post ID  jeo_get_map_data  Returns map data  jeo_get_mapgroup_data  Returns mapgroup data", 
            "title": "Map"
        }, 
        {
            "location": "/hooks/actions/", 
            "text": "Core action hooks\n\n\njeo_init\n\n\nDescription\n\n\nThis action is called after JEO has loaded. Useful for plugging new features for JEO.\n\n\nUsage\n\n\n?php\nfunction my_jeo_plugin_init() {\n  // Do something here\n}\nadd_action('jeo_init', 'my_jeo_plugin_init');\n?\n\n\n\n\n\n\n\njeo_enqueue_scripts\n\n\nDescription\n\n\nThis action is called after JEO core scripts has been loaded.\n\n\nUsage\n\n\n?php\nfunction my_jeo_scripts() {\n  wp_enqueue_script('jeo-dependent-script', get_stylesheet_directory_uri() . '/js/script.js');\n}\nadd_action('jeo_enqueue_scripts', 'my_jeo_scripts');\n?\n\n\n\n\n\n\n\njeo_map_setup_options\n\n\nDescription\n\n\nThis action is called inside the map settings metabox. You can create extra fields for your map by hooking into this action.\n\n\nUsage\n\n\nThis action receives 1 parameter:\n\n\n\n\n$map_data\n: The map data of the map being edited\n\n\n\n\n?php\nfunction my_new_setting($map_data) {\n  ?\n\n  \np\n\n    \nlabel for=\nmy_new_field\nMy field\n/label\n\n    \ninput id=\nmy_new_field\n type=\ntext\n name=\nmap_data[my_new_field]\n value=\n?php echo $map_data['my_new_field']; ?\n /\n\n  \n/p\n\n  \n?php\n}\nadd_action('jeo_map_setup_options', 'my_new_setting');\n?\n\n\n\n\n\n\n\njeo_pre_get_map\n\n\nDescription\n\n\nThis action is called inside the map query. Useful to modify the map query.\n\n\nUsage\n\n\nThis action receives 1 parameter:\n\n\n\n\n$query\n: the map query\n\n\n\n\n?php\nfunction my_pre_get_map($query) {\n  if($_GET['my_input']) {\n    // Modifying query here\n  }\n}\nadd_action('jeo_pre_get_map', 'my_pre_get_map');\n?\n\n\n\n\n\n\n\nLayers action hooks\n\n\njeo_layer_save\n\n\nDescription\n\n\nThis action is called after a layer is saved.\n\n\nUsage\n\n\nSame concept of WordPress' \nsave_post\n action hook.\n\n\nThis action receives 1 parameter:\n\n\n\n\n$post_id\n: The layer post id\n\n\n\n\n?php\n\nfunction my_layer_save($post_id) {\n  // Modify layer\n}\nadd_action('jeo_layer_save', 'my_layer_save');\n\n?\n\n\n\n\n\n\n\nMarkers action hooks\n\n\njeo_markers_enqueue_scripts\n\n\nDescription\n\n\nThis action is called after the markers scripts has been loaded.\n\n\nUsage\n\n\n?php\nfunction my_jeo_markers_scripts() {\n  wp_enqueue_script('jeo-markers-dependent-script', get_stylesheet_directory_uri() . '/js/markers-script.js');\n}\nadd_action('jeo_markers_enqueue_scripts', 'my_jeo_markers_scripts');\n?\n\n\n\n\n\n\n\njeo_markers_before_print\n\n\nDescription\n\n\nThis action is called before the markers GeoJSON is printed on the page.\n\n\nUsage\n\n\nYou can use it to modify the headers.\n\n\n?php\nfunction my_markers_before_print() {\n  if(isset($_GET['download'])) {\n    header('Content-Disposition: attachment;');\n  }\n}\nadd_action('jeo_markers_before_print', 'my_markers_before_print');\n?\n\n\n\n\n\n\n\njeo_markers_after_print\n\n\nDescription\n\n\nThis action is called after the markers GeoJSON is printed on the page.\n\n\nUsage\n\n\n?php\nfunction my_markers_after_print() {\n  // Do something here\n}\nadd_action('jeo_markers_after_print', 'my_markers_after_print');\n?\n\n\n\n\n\n\n\nPost geocoder action hooks\n\n\njeo_geocode_scripts\n\n\nDescription\n\n\nThis action is called after the post geocoder scripts has been loaded.\n\n\nUsage\n\n\n?php\nfunction my_geocode_scripts() {\n    wp_enqueue_script('geocode-dependent-script', get_stylesheet_directory_uri() . '/js/geocode-script.js');\n}\nadd_action('jeo_geocode_scripts', 'my_geocode_scripts');\n?\n\n\n\n\n\n\n\njeo_geocode_box\n\n\nDescription\n\n\nThis action is called inside the post geocoder metabox, after the main form fields.\n\n\nUsage\n\n\nThis action receives 1 parameter:\n\n\n\n\n$post\n: the post object being edited\n\n\n\n\n?php\nfunction my_geocode_box_fields($post) {\n  $field = get_post_meta($post-\nID, 'my_new_field', true);\n  ?\n\n  \np\n\n    \nlabel for=\nmy_new_field\nMy field\n/label\n\n    \ninput id=\nmy_new_field\n type=\ntext\n name=\nmy_new_field\n value=\n?php echo $field; ?\n /\n\n  \n/p\n\n  \n?php\n}\nadd_action('jeo_geocode_box', 'my_geocode_box_fields');\n?\n\n\n\n\n\n\n\njeo_geocode_box_save\n\n\nDescription\n\n\nThis action is called after the post geocode data is saved.\n\n\nUsage\n\n\nThis action receives 1 parameter:\n\n\n\n\n$post_id\n: the ID of saved post\n\n\n\n\n?php\nfunction my_geocode_save($post_id) {\n  if(isset($_REQUEST['my_new_field'])) {\n    update_post_meta($post-\nID, 'my_new_field', $_REQUEST['my_new_field']);\n  }\n}\nadd_action('jeo_geocode_box_save', 'my_geocode_save');\n?\n\n\n\n\n\n\n\nEmbed action hooks\n\n\njeo_before_embed\n\n\nDescription\n\n\nThis action is called before the embed template is displayed.\n\n\nUsage\n\n\n?php\nfunction my_before_embed_content() {\n  ?\n\n  \np\nSome content here\n/p\n\n  \n?php\n}\nadd_action('jeo_before_embed', 'my_before_embed_content');\n?\n\n\n\n\n\n\n\njeo_after_embed\n\n\nDescription\n\n\nThis action is called after the embed template is displayed.\n\n\nUsage\n\n\n?php\nfunction my_after_embed_content() {\n  ?\n\n  \np\nSome content here\n/p\n\n  \n?php\n}\nadd_action('jeo_after_embed', 'my_before_embed_content');\n?", 
            "title": "Action hooks"
        }, 
        {
            "location": "/hooks/actions/#core-action-hooks", 
            "text": "jeo_init  Description  This action is called after JEO has loaded. Useful for plugging new features for JEO.  Usage  ?php\nfunction my_jeo_plugin_init() {\n  // Do something here\n}\nadd_action('jeo_init', 'my_jeo_plugin_init');\n?    jeo_enqueue_scripts  Description  This action is called after JEO core scripts has been loaded.  Usage  ?php\nfunction my_jeo_scripts() {\n  wp_enqueue_script('jeo-dependent-script', get_stylesheet_directory_uri() . '/js/script.js');\n}\nadd_action('jeo_enqueue_scripts', 'my_jeo_scripts');\n?    jeo_map_setup_options  Description  This action is called inside the map settings metabox. You can create extra fields for your map by hooking into this action.  Usage  This action receives 1 parameter:   $map_data : The map data of the map being edited   ?php\nfunction my_new_setting($map_data) {\n  ? \n   p \n     label for= my_new_field My field /label \n     input id= my_new_field  type= text  name= map_data[my_new_field]  value= ?php echo $map_data['my_new_field']; ?  / \n   /p \n   ?php\n}\nadd_action('jeo_map_setup_options', 'my_new_setting');\n?    jeo_pre_get_map  Description  This action is called inside the map query. Useful to modify the map query.  Usage  This action receives 1 parameter:   $query : the map query   ?php\nfunction my_pre_get_map($query) {\n  if($_GET['my_input']) {\n    // Modifying query here\n  }\n}\nadd_action('jeo_pre_get_map', 'my_pre_get_map');\n?", 
            "title": "Core action hooks"
        }, 
        {
            "location": "/hooks/actions/#layers-action-hooks", 
            "text": "jeo_layer_save  Description  This action is called after a layer is saved.  Usage  Same concept of WordPress'  save_post  action hook.  This action receives 1 parameter:   $post_id : The layer post id   ?php\n\nfunction my_layer_save($post_id) {\n  // Modify layer\n}\nadd_action('jeo_layer_save', 'my_layer_save');\n\n?", 
            "title": "Layers action hooks"
        }, 
        {
            "location": "/hooks/actions/#markers-action-hooks", 
            "text": "jeo_markers_enqueue_scripts  Description  This action is called after the markers scripts has been loaded.  Usage  ?php\nfunction my_jeo_markers_scripts() {\n  wp_enqueue_script('jeo-markers-dependent-script', get_stylesheet_directory_uri() . '/js/markers-script.js');\n}\nadd_action('jeo_markers_enqueue_scripts', 'my_jeo_markers_scripts');\n?    jeo_markers_before_print  Description  This action is called before the markers GeoJSON is printed on the page.  Usage  You can use it to modify the headers.  ?php\nfunction my_markers_before_print() {\n  if(isset($_GET['download'])) {\n    header('Content-Disposition: attachment;');\n  }\n}\nadd_action('jeo_markers_before_print', 'my_markers_before_print');\n?    jeo_markers_after_print  Description  This action is called after the markers GeoJSON is printed on the page.  Usage  ?php\nfunction my_markers_after_print() {\n  // Do something here\n}\nadd_action('jeo_markers_after_print', 'my_markers_after_print');\n?", 
            "title": "Markers action hooks"
        }, 
        {
            "location": "/hooks/actions/#post-geocoder-action-hooks", 
            "text": "jeo_geocode_scripts  Description  This action is called after the post geocoder scripts has been loaded.  Usage  ?php\nfunction my_geocode_scripts() {\n    wp_enqueue_script('geocode-dependent-script', get_stylesheet_directory_uri() . '/js/geocode-script.js');\n}\nadd_action('jeo_geocode_scripts', 'my_geocode_scripts');\n?    jeo_geocode_box  Description  This action is called inside the post geocoder metabox, after the main form fields.  Usage  This action receives 1 parameter:   $post : the post object being edited   ?php\nfunction my_geocode_box_fields($post) {\n  $field = get_post_meta($post- ID, 'my_new_field', true);\n  ? \n   p \n     label for= my_new_field My field /label \n     input id= my_new_field  type= text  name= my_new_field  value= ?php echo $field; ?  / \n   /p \n   ?php\n}\nadd_action('jeo_geocode_box', 'my_geocode_box_fields');\n?    jeo_geocode_box_save  Description  This action is called after the post geocode data is saved.  Usage  This action receives 1 parameter:   $post_id : the ID of saved post   ?php\nfunction my_geocode_save($post_id) {\n  if(isset($_REQUEST['my_new_field'])) {\n    update_post_meta($post- ID, 'my_new_field', $_REQUEST['my_new_field']);\n  }\n}\nadd_action('jeo_geocode_box_save', 'my_geocode_save');\n?", 
            "title": "Post geocoder action hooks"
        }, 
        {
            "location": "/hooks/actions/#embed-action-hooks", 
            "text": "jeo_before_embed  Description  This action is called before the embed template is displayed.  Usage  ?php\nfunction my_before_embed_content() {\n  ? \n   p Some content here /p \n   ?php\n}\nadd_action('jeo_before_embed', 'my_before_embed_content');\n?    jeo_after_embed  Description  This action is called after the embed template is displayed.  Usage  ?php\nfunction my_after_embed_content() {\n  ? \n   p Some content here /p \n   ?php\n}\nadd_action('jeo_after_embed', 'my_before_embed_content');\n?", 
            "title": "Embed action hooks"
        }, 
        {
            "location": "/hooks/filters/", 
            "text": "Core filter hooks\n\n\njeo_directory\n\n\nDescription\n\n\nModify JEO core directory. Default is \nget_template_directory() . '/inc'\n.\n\n\nUsage\n\n\n?php\nfunction my_jeo_dir($dir) {\n  return get_stylesheet_directory() . '/jeo';\n}\nadd_filter('jeo_directory', 'my_jeo_dir');\n?\n\n\n\n\n\n\n\njeo_directory_uri\n\n\nDescription\n\n\nModify JEO core directory URI. Default is \nget_template_directory_uri() . '/inc'\n.\n\n\nUsage\n\n\n?php\nfunction my_jeo_dir_uri($dir_uri) {\n  return get_stylesheet_directory_uri() . '/jeo';\n}\nadd_filter('jeo_directory_uri', 'my_jeo_dir_uri');\n?\n\n\n\n\n\n\n\njeo_mapped_post_types\n\n\nDescription\n\n\nModify array of post types with mapping features. That includes the geocode box and use the post type inside the map posts query.\n\n\nDefault is all public post types, excluding pages.\n\n\nYou can also edit the mapped post types on the dashboard.\n\n\nUsage\n\n\n?php\nfunction my_mapped_post_types($post_types) {\n  return array('school', 'library');\n}\nadd_filter('jeo_mapped_post_types', 'my_mapped_post_types');\n?\n\n\n\n\n\n\n\njeo_use_map_query\n\n\nDescription\n\n\nRather the map related posts query should be used or not. Default is true.\n\n\nYou can also edit this on the dashboard.\n\n\nUsage\n\n\n?php\nadd_filter('jeo_use_map_query', '__return_false');\n?\n\n\n\n\n\n\n\njeo_use_hash\n\n\nDescription\n\n\nModify the use of the map location hash. Default is true.\n\n\nYou can also edit this on the dashboard.\n\n\nUsage\n\n\n?php\nadd_filter('jeo_use_map_query', '__return_false');\n?\n\n\n\n\n\n\n\njeo_mapbox_access_token\n\n\nDescription\n\n\nModify the MapBox library access token.\n\n\nYou can also edit this on the dashboard.\n\n\nUsage\n\n\n?php\nfunction my_mapbox_token() {\n  return 'pk.eyJ1IjoiaW5mb2FtYXpvbmlhIiwiYSI6InItajRmMGsifQ.JnRnLDiUXSEpgn7bPDzp7g';\n}\nadd_filter('jeo_mapbox_access_token', 'my_mapbox_token');\n?\n\n\n\n\n\n\n\njeo_posts_clauses_join\n\n\nDescription\n\n\nModify the map post query \njoin\n clause.\n\n\nUsage\n\n\nThis filter receives 3 parameters:\n\n\n\n\n$join\n\n\n$clauses\n: all the clauses\n\n\n$query\n: the original query\n\n\n\n\n?php\nfunction my_jeo_posts_join($join, $clauses, $query) {\n  // Modify $join here\n  return $join;\n}\nadd_filter('jeo_posts_clauses_join', 'my_jeo_posts_join', 10, 3);\n?\n\n\n\n\n\n\n\njeo_posts_clauses_where\n\n\nDescription\n\n\nModify the map post query \nwhere\n clause.\n\n\nUsage\n\n\nThis filter receives 3 parameters:\n\n\n\n\n$where\n\n\n$clauses\n: all the clauses\n\n\n$query\n: the original query\n\n\n\n\n?php\nfunction my_jeo_posts_where($where, $clauses, $query) {\n  // Modify $where here\n  return $where;\n}\nadd_filter('jeo_posts_clauses_where', 'my_jeo_posts_where', 10, 3);\n?\n\n\n\n\n\n\n\njeo_posts_clauses_groupby\n\n\nDescription\n\n\nModify the map post query \ngroupby\n clause.\n\n\nUsage\n\n\nThis filter receives 3 parameters:\n\n\n\n\n$groupby\n\n\n$clauses\n: all the clauses\n\n\n$query\n: the original query\n\n\n\n\n?php\nfunction my_jeo_posts_clauses($groupby, $clauses, $query) {\n  // Modify $groupby here\n  return $groupby;\n}\nadd_filter('jeo_posts_clauses_groupby', 'my_jeo_posts_groupby', 10, 3);\n?\n\n\n\n\n\n\n\njeo_map_conf\n\n\nDescription\n\n\nModify the array with the configuration of the map to be displayed.\n\n\nUsage\n\n\nThis filter receives 2 parameters:\n\n\n\n\n$conf\n: the configuration array\n\n\n$post\n: the map post object\n\n\n\n\n?php\nfunction my_map_conf($conf, $post) {\n  $conf['disableHash'] = true;\n  return $conf;\n}\nadd_filter('jeo_map_conf', 'my_map_conf', 10, 2);\n?\n\n\n\n\n\n\n\njeo_mapgroup_conf\n\n\nDescription\n\n\nModify the array with the configuration of the mapgroup to be displayed.\n\n\nUsage\n\n\nThis filter receives 2 parameters:\n\n\n\n\n$conf\n: the configuration array\n\n\n$post\n: the mapgroup post object\n\n\n\n\n?php\nfunction my_mapgroup_conf($conf, $post) {\n  $conf['disableHash'] = true;\n  return $conf;\n}\nadd_filter('jeo_mapgroup_conf', 'my_mapgroup_conf', 10, 2);\n?\n\n\n\n\n\n\n\njeo_map_data\n\n\nDescription\n\n\nModify the array with the map data to de displayed, including layers and legends.\n\n\nUsage\n\n\nThis filter receives 2 parameters:\n\n\n\n\n$data\n: the map data\n\n\n$post\n: the map post\n\n\n\n\n?php\nfunction my_map_data($data, $post) {\n  // Modify map data here\n  return $data;\n}\nadd_filter('jeo_map_data', 'my_map_data', 10, 2);\n?\n\n\n\n\n\n\n\njeo_mapgroup_data\n\n\nDescription\n\n\nModify the array with the mapgroup data to de displayed.\n\n\nUsage\n\n\nThis filter receives 2 parameters:\n\n\n\n\n$data\n: the mapgroup data\n\n\n$post\n: the mapgroup post\n\n\n\n\n?php\nfunction my_mapgroup_data($data, $post) {\n  // Modify map data here\n  return $data;\n}\nadd_filter('jeo_mapgroup_data', 'my_mapgroup_data', 10, 2);\n?\n\n\n\n\n\n\n\nMarkers filter hooks\n\n\njeo_enable_clustering\n\n\nDescription\n\n\nModify the use of marker clustering. Default is false.\n\n\nYou can also edit this on the dashboard.\n\n\nUsage\n\n\n?php\nadd_filter('jeo_enable_clustering', '__return_true');\n?\n\n\n\n\n\n\n\njeo_markers_enable_transient\n\n\nDescription\n\n\nUse \ntransient API\n to cache marker data. Default is true.\n\n\nUsage\n\n\n?php\nadd_filter('jeo_markers_enable_transient', '__return_false');\n?\n\n\n\n\n\n\n\njeo_markers_enable_browser_caching\n\n\nDescription\n\n\nUse browser cache on GeoJSON response. Default is true.\n\n\nUsage\n\n\n?php\nadd_filter('jeo_markers_enable_browser_caching', '__return_false');\n?\n\n\n\n\n\n\n\njeo_geocode_type\n\n\nDescription\n\n\nRather to use \ndefault\n (address search) or \nlatlng\n (direct coordinates) for post geocoding. Default is \ndefault\n.\n\n\nYou can also edit this on the dashboard.\n\n\nUsage\n\n\n?php\nfunction my_geocode_type() {\n  return 'latlng';\n}\nadd_filter('jeo_geocode_type', 'my_geocode_type');\n?\n\n\n\n\n\n\n\njeo_geocode_service\n\n\nDescription\n\n\nRather to use \nosm\n (OpenStreetMap Nominatim) or \ngmaps\n (Google Maps) geocode service. Default is \nosm\n.\n\n\nYou can also edit this on the dashboard.\n\n\nNote: \ngmaps\n requires API Key\n\n\nUsage\n\n\n?php\nfunction my_geocode_service() {\n  return 'gmaps';\n}\nadd_filter('jeo_geocode_service', 'my_geocode_service');\n?\n\n\n\n\n\n\n\njeo_gmaps_api_key\n\n\nDescription\n\n\nModify the Google Maps api key, used for Google Maps geocode service.\n\n\nYou can also edit this on the dashboard.\n\n\nUsage\n\n\n?php\nfunction my_gmaps_api_key() {\n  return 'apikeyhere';\n}\nadd_filter('jeo_gmaps_api_key', 'my_gmaps_api_key');\n?\n\n\n\n\n\n\n\njeo_use_marker_extent\n\n\nDescription\n\n\nModify the use of the marker extent to center the map. Default is \nfalse\n for the front page and single map/mapgroup pages and \ntrue\n for other cases.\n\n\nUsage\n\n\n?php\nfunction my_marker_extent() {\n  // Never use marker extent\n  return false;\n}\nadd_filter('jeo_use_marker_extent', 'my_marker_extent');\n?\n\n\n\n\n\n\n\njeo_marker_extent_default_zoom\n\n\nDescription\n\n\nSet a default zoom for map centering on marker extent. Default is \nfalse\n.\n\n\nUsage\n\n\n?php\nfunction my_marker_extent_default_zoom() {\n  return 12;\n}\nadd_filter('jeo_marker_extent_default_zoom', 'my_marker_extent_default_zoom');\n?\n\n\n\n\n\n\n\njeo_markerclusterer_options\n\n\nDescription\n\n\nModify \nLeaflet.markerclusterer\n options.\n\n\nUsage\n\n\n?php\nfunction my_markerclusterer_options() {\n  return array(\n   'spiderfyOnMaxZoom' =\n false\n  );\n}\nadd_filter('jeo_markerclusterer_options', 'my_markerclusterer_options');\n?\n\n\n\n\n\n\n\njeo_marker_base_query\n\n\nDescription\n\n\nModify the base query object for the map markers. This query object will still pass through JEO default settings to display markers.\n\n\nThe default query is the global \n$wp_query\n.\n\n\nUsage\n\n\nThis filter receives 1 parameter:\n\n\n\n\n$query\n: the marker base query object\n\n\n\n\n?php\nfunction my_marker_base_query($query) {\n  if(is_home() || is_front_page()) {\n    return new WP_Query();\n  }\n  return $query;\n}\nadd_filter('jeo_marker_base_query', 'my_marker_base_query');\n?\n\n\n\n\n\n\n\njeo_marker_query\n\n\nDescription\n\n\nModify the final query object for the map markers. After it passes through JEO default settings for marker queries.\n\n\nUsage\n\n\nThis filter receives 1 parameter:\n\n\n\n\n$query\n: the marker query object\n\n\n\n\n?php\nfunction my_marker_query($query) {\n  // Modify query here\n  return $query;\n}\nadd_filter('jeo_marker_query', 'my_marker_query');\n?\n\n\n\n\n\n\n\njeo_markers_cache_key\n\n\nDescription\n\n\nModify the marker query cache key value for the transient api. Useful if you need more values to differentiate queries with hidden extra parameters.\n\n\nUsage\n\n\nThis filter receives 2 parameters:\n\n\n\n\n$cache_key\n: the cache key\n\n\n$query\n: array with query parameters\n\n\n\n\n?php\nfunction my_markers_cache_key($cache_key, $query) {\n  // Modify cache key here\n  return $cache_key\n}\nadd_filter('jeo_markers_cache_key', 'my_markers_cache_key', 10, 2);\n?\n\n\n\n\n\n\n\njeo_markers_data\n\n\nDescription\n\n\nModify the markers' GeoJSON as an associative array.\n\n\nUsage\n\n\nThis filter receives 2 parameters:\n\n\n\n\n$data\n: the geojson array\n\n\n$markers_query\n: the markers query object\n\n\n\n\n?php\nfunction my_markers_data($data, $markers_query) {\n  // Modify geojson here\n  return $data;\n}\nadd_filter('jeo_markers_data', 'my_markers_data', 10, 2);\n?\n\n\n\n\n\n\n\njeo_geojson_content_type\n\n\nDescription\n\n\nModify the \nContent-Type\n header for the GeoJSON response. Default is \napplication/json\n.\n\n\nUsage\n\n\n?php\nfunction my_geojson_content_type() {\n  return 'application/vnd.geo+json';\n}\nadd_filter('jeo_geojson_content_type', 'my_geojson_content_type');\n?\n\n\n\n\n\n\n\njeo_markers_geojson\n\n\nDescription\n\n\nModify the already JSON encoded GeoJSON output.\n\n\nUsage\n\n\n?php\nfunction my_markers_geojson($geojson) {\n  // Modify GeoJSON here\n  return $geojson;\n}\nadd_filter('jeo_markers_geojson', 'my_markers_geojson');\n?\n\n\n\n\n\n\n\njeo_markers_limit\n\n\nDescription\n\n\nModify the limit of markers to be displayed on the map. Default is \n200\n.\n\n\nUsage\n\n\n?php\nfunction my_markers_limit() {\n  // Unlimited markers\n  return -1;\n}\nadd_filter('jeo_markers_limit', 'my_markers_limit');\n?\n\n\n\n\n\n\n\njeo_marker_bubble\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_marker_icon\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_marker_class\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_marker_data\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_marker_geometry\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_marker_coordinates\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_markers_geojson_key\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_markers_geojson_keys\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\nMarker icons filter hooks\n\n\njeo_marker_taxonomies\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\nFeatured posts filter hooks\n\n\njeo_featured_post_types\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\nRange slider feature filter hooks\n\n\njeo_range_slider_options\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_range_slider_filter_property\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\n\"Share a map\" feature filter hooks\n\n\njeo_disable_share_map_menu\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_share_url\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\nEmbed filter hooks\n\n\njeo_embed_url\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_map_embed_conf\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_map_embed_geojson_conf\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\nAdmin page filter hooks\n\n\njeo_settings_tabs\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?\n\n\n\n\n\n\n\njeo_settings_form_sections\n\n\nDescription\n\n\nUsage\n\n\n?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Filter hooks"
        }, 
        {
            "location": "/hooks/filters/#core-filter-hooks", 
            "text": "jeo_directory  Description  Modify JEO core directory. Default is  get_template_directory() . '/inc' .  Usage  ?php\nfunction my_jeo_dir($dir) {\n  return get_stylesheet_directory() . '/jeo';\n}\nadd_filter('jeo_directory', 'my_jeo_dir');\n?    jeo_directory_uri  Description  Modify JEO core directory URI. Default is  get_template_directory_uri() . '/inc' .  Usage  ?php\nfunction my_jeo_dir_uri($dir_uri) {\n  return get_stylesheet_directory_uri() . '/jeo';\n}\nadd_filter('jeo_directory_uri', 'my_jeo_dir_uri');\n?    jeo_mapped_post_types  Description  Modify array of post types with mapping features. That includes the geocode box and use the post type inside the map posts query.  Default is all public post types, excluding pages.  You can also edit the mapped post types on the dashboard.  Usage  ?php\nfunction my_mapped_post_types($post_types) {\n  return array('school', 'library');\n}\nadd_filter('jeo_mapped_post_types', 'my_mapped_post_types');\n?    jeo_use_map_query  Description  Rather the map related posts query should be used or not. Default is true.  You can also edit this on the dashboard.  Usage  ?php\nadd_filter('jeo_use_map_query', '__return_false');\n?    jeo_use_hash  Description  Modify the use of the map location hash. Default is true.  You can also edit this on the dashboard.  Usage  ?php\nadd_filter('jeo_use_map_query', '__return_false');\n?    jeo_mapbox_access_token  Description  Modify the MapBox library access token.  You can also edit this on the dashboard.  Usage  ?php\nfunction my_mapbox_token() {\n  return 'pk.eyJ1IjoiaW5mb2FtYXpvbmlhIiwiYSI6InItajRmMGsifQ.JnRnLDiUXSEpgn7bPDzp7g';\n}\nadd_filter('jeo_mapbox_access_token', 'my_mapbox_token');\n?    jeo_posts_clauses_join  Description  Modify the map post query  join  clause.  Usage  This filter receives 3 parameters:   $join  $clauses : all the clauses  $query : the original query   ?php\nfunction my_jeo_posts_join($join, $clauses, $query) {\n  // Modify $join here\n  return $join;\n}\nadd_filter('jeo_posts_clauses_join', 'my_jeo_posts_join', 10, 3);\n?    jeo_posts_clauses_where  Description  Modify the map post query  where  clause.  Usage  This filter receives 3 parameters:   $where  $clauses : all the clauses  $query : the original query   ?php\nfunction my_jeo_posts_where($where, $clauses, $query) {\n  // Modify $where here\n  return $where;\n}\nadd_filter('jeo_posts_clauses_where', 'my_jeo_posts_where', 10, 3);\n?    jeo_posts_clauses_groupby  Description  Modify the map post query  groupby  clause.  Usage  This filter receives 3 parameters:   $groupby  $clauses : all the clauses  $query : the original query   ?php\nfunction my_jeo_posts_clauses($groupby, $clauses, $query) {\n  // Modify $groupby here\n  return $groupby;\n}\nadd_filter('jeo_posts_clauses_groupby', 'my_jeo_posts_groupby', 10, 3);\n?    jeo_map_conf  Description  Modify the array with the configuration of the map to be displayed.  Usage  This filter receives 2 parameters:   $conf : the configuration array  $post : the map post object   ?php\nfunction my_map_conf($conf, $post) {\n  $conf['disableHash'] = true;\n  return $conf;\n}\nadd_filter('jeo_map_conf', 'my_map_conf', 10, 2);\n?    jeo_mapgroup_conf  Description  Modify the array with the configuration of the mapgroup to be displayed.  Usage  This filter receives 2 parameters:   $conf : the configuration array  $post : the mapgroup post object   ?php\nfunction my_mapgroup_conf($conf, $post) {\n  $conf['disableHash'] = true;\n  return $conf;\n}\nadd_filter('jeo_mapgroup_conf', 'my_mapgroup_conf', 10, 2);\n?    jeo_map_data  Description  Modify the array with the map data to de displayed, including layers and legends.  Usage  This filter receives 2 parameters:   $data : the map data  $post : the map post   ?php\nfunction my_map_data($data, $post) {\n  // Modify map data here\n  return $data;\n}\nadd_filter('jeo_map_data', 'my_map_data', 10, 2);\n?    jeo_mapgroup_data  Description  Modify the array with the mapgroup data to de displayed.  Usage  This filter receives 2 parameters:   $data : the mapgroup data  $post : the mapgroup post   ?php\nfunction my_mapgroup_data($data, $post) {\n  // Modify map data here\n  return $data;\n}\nadd_filter('jeo_mapgroup_data', 'my_mapgroup_data', 10, 2);\n?", 
            "title": "Core filter hooks"
        }, 
        {
            "location": "/hooks/filters/#markers-filter-hooks", 
            "text": "jeo_enable_clustering  Description  Modify the use of marker clustering. Default is false.  You can also edit this on the dashboard.  Usage  ?php\nadd_filter('jeo_enable_clustering', '__return_true');\n?    jeo_markers_enable_transient  Description  Use  transient API  to cache marker data. Default is true.  Usage  ?php\nadd_filter('jeo_markers_enable_transient', '__return_false');\n?    jeo_markers_enable_browser_caching  Description  Use browser cache on GeoJSON response. Default is true.  Usage  ?php\nadd_filter('jeo_markers_enable_browser_caching', '__return_false');\n?    jeo_geocode_type  Description  Rather to use  default  (address search) or  latlng  (direct coordinates) for post geocoding. Default is  default .  You can also edit this on the dashboard.  Usage  ?php\nfunction my_geocode_type() {\n  return 'latlng';\n}\nadd_filter('jeo_geocode_type', 'my_geocode_type');\n?    jeo_geocode_service  Description  Rather to use  osm  (OpenStreetMap Nominatim) or  gmaps  (Google Maps) geocode service. Default is  osm .  You can also edit this on the dashboard.  Note:  gmaps  requires API Key  Usage  ?php\nfunction my_geocode_service() {\n  return 'gmaps';\n}\nadd_filter('jeo_geocode_service', 'my_geocode_service');\n?    jeo_gmaps_api_key  Description  Modify the Google Maps api key, used for Google Maps geocode service.  You can also edit this on the dashboard.  Usage  ?php\nfunction my_gmaps_api_key() {\n  return 'apikeyhere';\n}\nadd_filter('jeo_gmaps_api_key', 'my_gmaps_api_key');\n?    jeo_use_marker_extent  Description  Modify the use of the marker extent to center the map. Default is  false  for the front page and single map/mapgroup pages and  true  for other cases.  Usage  ?php\nfunction my_marker_extent() {\n  // Never use marker extent\n  return false;\n}\nadd_filter('jeo_use_marker_extent', 'my_marker_extent');\n?    jeo_marker_extent_default_zoom  Description  Set a default zoom for map centering on marker extent. Default is  false .  Usage  ?php\nfunction my_marker_extent_default_zoom() {\n  return 12;\n}\nadd_filter('jeo_marker_extent_default_zoom', 'my_marker_extent_default_zoom');\n?    jeo_markerclusterer_options  Description  Modify  Leaflet.markerclusterer  options.  Usage  ?php\nfunction my_markerclusterer_options() {\n  return array(\n   'spiderfyOnMaxZoom' =  false\n  );\n}\nadd_filter('jeo_markerclusterer_options', 'my_markerclusterer_options');\n?    jeo_marker_base_query  Description  Modify the base query object for the map markers. This query object will still pass through JEO default settings to display markers.  The default query is the global  $wp_query .  Usage  This filter receives 1 parameter:   $query : the marker base query object   ?php\nfunction my_marker_base_query($query) {\n  if(is_home() || is_front_page()) {\n    return new WP_Query();\n  }\n  return $query;\n}\nadd_filter('jeo_marker_base_query', 'my_marker_base_query');\n?    jeo_marker_query  Description  Modify the final query object for the map markers. After it passes through JEO default settings for marker queries.  Usage  This filter receives 1 parameter:   $query : the marker query object   ?php\nfunction my_marker_query($query) {\n  // Modify query here\n  return $query;\n}\nadd_filter('jeo_marker_query', 'my_marker_query');\n?    jeo_markers_cache_key  Description  Modify the marker query cache key value for the transient api. Useful if you need more values to differentiate queries with hidden extra parameters.  Usage  This filter receives 2 parameters:   $cache_key : the cache key  $query : array with query parameters   ?php\nfunction my_markers_cache_key($cache_key, $query) {\n  // Modify cache key here\n  return $cache_key\n}\nadd_filter('jeo_markers_cache_key', 'my_markers_cache_key', 10, 2);\n?    jeo_markers_data  Description  Modify the markers' GeoJSON as an associative array.  Usage  This filter receives 2 parameters:   $data : the geojson array  $markers_query : the markers query object   ?php\nfunction my_markers_data($data, $markers_query) {\n  // Modify geojson here\n  return $data;\n}\nadd_filter('jeo_markers_data', 'my_markers_data', 10, 2);\n?    jeo_geojson_content_type  Description  Modify the  Content-Type  header for the GeoJSON response. Default is  application/json .  Usage  ?php\nfunction my_geojson_content_type() {\n  return 'application/vnd.geo+json';\n}\nadd_filter('jeo_geojson_content_type', 'my_geojson_content_type');\n?    jeo_markers_geojson  Description  Modify the already JSON encoded GeoJSON output.  Usage  ?php\nfunction my_markers_geojson($geojson) {\n  // Modify GeoJSON here\n  return $geojson;\n}\nadd_filter('jeo_markers_geojson', 'my_markers_geojson');\n?    jeo_markers_limit  Description  Modify the limit of markers to be displayed on the map. Default is  200 .  Usage  ?php\nfunction my_markers_limit() {\n  // Unlimited markers\n  return -1;\n}\nadd_filter('jeo_markers_limit', 'my_markers_limit');\n?    jeo_marker_bubble  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_marker_icon  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_marker_class  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_marker_data  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_marker_geometry  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_marker_coordinates  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_markers_geojson_key  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_markers_geojson_keys  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Markers filter hooks"
        }, 
        {
            "location": "/hooks/filters/#marker-icons-filter-hooks", 
            "text": "jeo_marker_taxonomies  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Marker icons filter hooks"
        }, 
        {
            "location": "/hooks/filters/#featured-posts-filter-hooks", 
            "text": "jeo_featured_post_types  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Featured posts filter hooks"
        }, 
        {
            "location": "/hooks/filters/#range-slider-feature-filter-hooks", 
            "text": "jeo_range_slider_options  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_range_slider_filter_property  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Range slider feature filter hooks"
        }, 
        {
            "location": "/hooks/filters/#share-a-map-feature-filter-hooks", 
            "text": "jeo_disable_share_map_menu  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_share_url  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "\"Share a map\" feature filter hooks"
        }, 
        {
            "location": "/hooks/filters/#embed-filter-hooks", 
            "text": "jeo_embed_url  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_map_embed_conf  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_map_embed_geojson_conf  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Embed filter hooks"
        }, 
        {
            "location": "/hooks/filters/#admin-page-filter-hooks", 
            "text": "jeo_settings_tabs  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?    jeo_settings_form_sections  Description  Usage  ?php\nfunction my_() {\n\n}\nadd_filter('jeo_', 'my_');\n?", 
            "title": "Admin page filter hooks"
        }
    ]
}